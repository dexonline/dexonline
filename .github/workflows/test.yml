name: Run Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: dexonline
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -u root --password=admin" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: intl, mysqli, pdo_mysql

      - name: Install and configure Apache
        run: |
          sudo apt-get update
          sudo apt-get install -y apache2
          sudo a2enmod rewrite
          sudo cp tools/docker/php/000-default.conf /etc/apache2/sites-available/000-default.conf
          sudo rm -rf /var/www/html
          sudo ln -s $GITHUB_WORKSPACE /var/www/html
          sudo chown -R www-data:www-data /var/www/html
          sudo chmod -R 755 /var/www/html
          # Start Apache in the background
          sudo /usr/sbin/apache2ctl -D FOREGROUND &

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Create Config.php from sample
        run: |
          cp Config.php.sample Config.php
          sed -i 's|const DATABASE = .*;|const DATABASE = "mysql://root:admin@127.0.0.1/dexonline";|' Config.php
          sed -i 's|const TEST_DATABASE = .*;|const TEST_DATABASE = "mysql://root:admin@127.0.0.1/dexonline";|' Config.php
          sed -i 's|const TEST_MODE = false;|const TEST_MODE = true;|' Config.php
          sed -i 's|const DEVELOPMENT_MODE = false;|const DEVELOPMENT_MODE = true;|' Config.php
          sed -i 's|const URL_PREFIX = .*;|const URL_PREFIX = "/";|' Config.php
          sed -i 's|const LOG_FILE = .*;|const LOG_FILE = "/tmp/dexonline.log";|' Config.php

      - name: Setup MySQL credentials
        run: |
          echo "[client]
          user=root
          password=admin
          host=127.0.0.1" > ~/.my.cnf
          chmod 600 ~/.my.cnf

      - name: Create log file
        run: |
          touch /tmp/dexonline.log
          chmod 666 /tmp/dexonline.log

      - name: Run setup script
        run: bash tools/setup.sh
        env:
          MYSQL_PWD: admin

      - name: Configure hosts file
        run: echo "127.0.0.1 localhost dex.localhost" | sudo tee -a /etc/hosts

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: Install Node.js and test runner
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm install -g selenium-side-runner start-server-and-test

      - name: Run Selenium Tests
        run: |
          set -e
          start-server-and-test \
            'chromedriver --port=4444 --verbose --log-path=/tmp/chromedriver.log' \
            http-get://localhost:4444/status \
            'selenium-side-runner \
              --server http://localhost:4444 \
              -c "browserName=chrome goog:chromeOptions.args=[--headless,--no-sandbox,--disable-dev-shm-usage,--disable-gpu,--window-size=1920,1080]" \
              --base-url http://dex.localhost \
              --timeout 120000 \
              --output-directory=/tmp/selenium-results \
              test/dexonline-test-suite.side'
        env:
          # This environment variable is used by start-server-and-test
          # It sets the timeout for waiting for the server to start (in seconds)
          WAIT_ON_TIMEOUT: 60

      - name: Collect logs on failure
        if: ${{ failure() }}
        run: |
          echo "### ChromeDriver Logs ###"
          cat /tmp/chromedriver.log || echo "No ChromeDriver logs found"

          echo "### Apache Error Logs ###"
          sudo cat /var/log/apache2/error.log || echo "No Apache error logs found"

          echo "### Application Logs ###"
          cat /tmp/dexonline.log || echo "No application logs found"

          echo "### Selenium Results ###"
          # The output file is often named after the suite
          cat /tmp/selenium-results/default_suite.json || echo "No Selenium result file found"
