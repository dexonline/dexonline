name: Run Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: dexonline
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -u root --password=admin" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: intl, mysqli, pdo_mysql

      - name: Install and configure Apache
        run: |
          sudo apt-get update
          sudo apt-get install -y apache2
          sudo a2enmod rewrite

          # Copy the custom Apache configuration from the specified location
          sudo cp tools/docker/php/000-default.conf /etc/apache2/sites-available/000-default.conf

          sudo service apache2 restart
          sudo rm -rf /var/www/html
          sudo ln -s $GITHUB_WORKSPACE /var/www/html
          sudo chown -R www-data:www-data /var/www/html
          sudo chmod -R 755 /var/www/html

      - name: Install dependencies
        run: |
          composer install --no-interaction --prefer-dist

      - name: Create Config.php from sample
        run: |
          cp Config.php.sample Config.php
          sed -i 's|const DATABASE = .*;|const DATABASE = "mysql://root:admin@127.0.0.1/dexonline";|' Config.php
          sed -i 's|const TEST_DATABASE = .*;|const TEST_DATABASE = "mysql://root:admin@127.0.0.1/dexonline";|' Config.php
          sed -i 's|const TEST_MODE = false;|const TEST_MODE = true;|' Config.php
          sed -i 's|const DEVELOPMENT_MODE = false;|const DEVELOPMENT_MODE = true;|' Config.php
          sed -i 's|const URL_PREFIX = .*;|const URL_PREFIX = "/";|' Config.php

      - name: Setup MySQL credentials
        run: |
          echo "[client]
          user=root
          password=admin
          host=127.0.0.1" > ~/.my.cnf
          chmod 600 ~/.my.cnf

      - name: Create log file
        run: |
          touch /tmp/dexonline.log
          chmod 666 /tmp/dexonline.log
          sed -i 's|const LOG_FILE = .*;|const LOG_FILE = "/tmp/dexonline.log";|' Config.php

      - name: Run setup script
        run: bash tools/setup.sh
        env:
          MYSQL_PWD: admin

        #- name: Run PHP tests
        #run: vendor/bin/phpunit

      - name: Install Chrome for Selenium tests
        uses: browser-actions/setup-chrome@latest

      - name: Install Selenium
        run: |
          mkdir -p selenium
          wget https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.8.0/selenium-server-4.8.0.jar -O selenium/selenium-server.jar

      - name: Start Selenium server
        run: |
          # Create a unique user data directory for Chrome
          mkdir -p /tmp/chrome-user-data

          # Start Selenium server with specific Chrome options and debug
          java -jar selenium/selenium-server.jar standalone \
            --port 4444 \
            --selenium-manager true \
            --session-timeout 300 \
            --log-level INFO &

          # Wait for the server to start properly
          sleep 10

          # Check if Selenium is running
          curl -s http://localhost:4444/status || echo "Selenium server not responding"

      - name: Install Selenium IDE Runner
        run: npm install -g selenium-side-runner

      - name: Run Selenium tests
        run: |
          # Run Selenium tests with enhanced Chrome options
          selenium-side-runner \
            -c "browserName=chrome goog:chromeOptions.args=[--no-sandbox,--disable-dev-shm-usage,--headless=new,--disable-gpu,--window-size=1920,1080,--disable-extensions,--user-data-dir=/tmp/chrome-user-data-$RANDOM]" \
            --output-directory=/tmp/selenium-results \
            --timeout=30000 \
            --base-url http://localhost \
            test/dexonline-test-suite.side
        env:
          SELENIUM_PROMISE_MANAGER: false
