server {
  listen 80;
  server_name localhost;
  root /srv/http/dexonline/www;
  index index.php index.html;
  # rewrite_log on;

  try_files $uri $uri/ =404;

  # Note: this directive only works for actually broken URLS.
  # Once Nginx passes control to PHP, we are responsible for providing the content of the 404 page as well.
  # See http://stackoverflow.com/questions/437256/why-wont-my-php-app-send-a-404-error
  error_page 404 /404;

  location / {

    rewrite ^/text(-([^/]+))?/(.*)$ /search.php?cuv=$3&source=$2&text=1 last;
    rewrite ^/definitie(-([^/]+))?/([^/]+)(/([0-9]+))?(/(articole|definitii|imagini|paradigma|sinteza|pronuntie))?(/xml|/json)?$ /search.php?cuv=$3&source=$2&defId=$5&tab=$7&format=$8 last;
    rewrite ^/intrare(-([^/]+))?/([^/]+)(/([0-9]+))?(/(articole|definitii|imagini|paradigma|sinteza|pronuntie))?(/xml|/json)?$ /search.php?cuv=$3&source=$2&entryId=$5&tab=$7&format=$8 last;
    rewrite ^/lexem/([^/]+)(/([0-9]+))?$ /search.php?cuv=$1&lexemeId=$3 last;

    if (-f $document_root/$uri.php) {
      rewrite ^(.*)$ $uri.php last;
    }
  }

  location ~ \.php$ {
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $request_filename;
    # cata: Necessary for OpenID return URLs
    fastcgi_param SERVER_PORT 80;
    fastcgi_pass php;
    # fastcgi_read_timeout 180;

    # cata: This seems helpful in preventing fpm crashes
    fastcgi_keep_conn on;

    set $cors 0;
    if ($arg_xml) {
      set $cors 1;
    }
    if ($arg_json) {
      set $cors 1;
    }
    if ($cors) {
      add_header Access-Control-Allow-Origin *;
    }
  }

}
